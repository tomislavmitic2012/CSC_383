import java.io.PrintStream;
import net.datastructures.*;

public class Josephus {
	public static PrintStream output = new PrintStream( System.out );
	/**
	 * Solution of the Josephus problem using a queue
	 */
	public static < E > E Josephus( Queue < E > Q, int k ) {
		if ( Q.isEmpty() ) return null;
		
		while ( Q.size() > 1 ) {
			Josephus.output.println( " Queue: " + Q + " k = " + k );
			for ( int i = 0; i < k; i++ ) {
				Q.enqueue( Q.dequeue() );								// move the front element to the end
			}
			E e = Q.dequeue();											// remove the front element from the collection
			Josephus.output.println( "   " + e + " is out");
		}
		
		return Q.dequeue();												// the winner
	}
}