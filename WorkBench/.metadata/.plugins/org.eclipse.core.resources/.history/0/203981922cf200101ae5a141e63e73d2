package element_iterator;

import interfaces.Position;
import interfaces.PositionList;
import java.util.Iterator;

import exceptions.EmptyListException;

public class ElementIterator< E > implements Iterator< E > {
	private ElementIterator< E > self = this;
	
	protected PositionList< E > list;							// the underlying list
	protected Position< E > cursor;								// the next position
	
	/**
	 * Creates an element iterator over the given list.
	 * @throws EmptyListException 
	 */
	public ElementIterator( PositionList< E > L ) throws EmptyListException {
		self.list = L;
		self.cursor = ( self.list.isEmpty() ) ? null : self.list.first();
	}
	
	@Override
	public boolean hasNext() {
		return ( self.cursor != null );
	}

	@Override
	public E next() throws NoSuchElementException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void remove() {
		// TODO Auto-generated method stub
		
	}
}
