package node_stack;

import array_stack.ArrayStack;
import interfaces.Stack;

public class NodeStack< E > implements Stack< E > {
	private NodeStack< E > self = this;
	
	@Override
	public String toString() {
		String s;
		s = "[ ";
		if ( self.size() > 0 ) {
			s += self.S[ 0 ];
		}
		if ( self.size() > 1 ) {
			for( int i = 1, max = self.size() - 1; i <= max; i++ ) {
				s += ", " + self.S[ i ];
			}
		}
		return s + " ]";
	}
	
	/**
	 * Prints status information about a recent operation and the stack.
	 */
	public void status( String op, Object element ) {
		ArrayStack.output.print( "------> " + op);				// print this operation
		ArrayStack.output.println( ", returns " + element );	// what was returned
		ArrayStack.output.print( "result: size = " + self.size() + ", isEmpty = " + self.isEmpty() );
		ArrayStack.output.println( ", stack: " + self );		// contents of the stack
	}
}