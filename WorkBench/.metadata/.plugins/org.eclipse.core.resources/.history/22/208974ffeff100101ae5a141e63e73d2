package node;

import exceptions.EmptyDequeException;
import interfaces.Deque;

public class NodeDeque< E > implements Deque< E > {

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public E getFirst() throws EmptyDequeException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public E getLast() throws EmptyDequeException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void addFirst(E element) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addLast(E element) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public E removeFirst() throws EmptyDequeException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public E removeLast() throws EmptyDequeException {
		// TODO Auto-generated method stub
		return null;
	}
	
}