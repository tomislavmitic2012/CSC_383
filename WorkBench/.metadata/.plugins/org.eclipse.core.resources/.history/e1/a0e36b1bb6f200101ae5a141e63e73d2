package linked_list;

import node.Node;

public class List {
	private List self = this;
	
	public Node head;
	public int size;
	
	public List() {
		self.head = null;
		self.size = 0;
	}
	
	public List( Node N ) {
		self.size = 1;
		self.head = new Node( N );
	}
	
	public List( List other ) {
		if ( other == null ) {
			self.head = null;
			self.size = 0;
		} else {
			self.size = other.size;
			self.head = Node.copy( other.head );
		}
	}
	
	public static List build( int[] A ) {
		if ( A.length == 0 ) return null;
		
		int n = A.length - 1;
		Node tmp = new Node( A[ n ] );
		List list = new List( tmp );
		for ( int i = n - 1; i >= 0; i-- ) {
			tem = new Node( A[ i ] );
			list.addFront( tmp );
		}
	}
}